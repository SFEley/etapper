require 'etapper/api/service'
require 'etapper/api/serviceMappingRegistry'
require 'soap/rpc/driver'

module Etapper::API

class MessagingService < ::SOAP::RPC::Driver
  DefaultEndpointUrl = "https://app.etapestry.com:443/v2messaging/service"
  NsService = "etapestryAPI/service"

  Methods = [
    [ XSD::QName.new(NsService, "addAccount"),
      "",
      "addAccount",
      [ ["in", "Account_1", ["Etapper::API::Account", "etapestryAPI/service", "Account"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "addAndProcessGift"),
      "",
      "addAndProcessGift",
      [ ["in", "Gift_1", ["Etapper::API::Gift", "etapestryAPI/service", "Gift"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "addAndProcessPayment"),
      "",
      "addAndProcessPayment",
      [ ["in", "Payment_1", ["Etapper::API::Payment", "etapestryAPI/service", "Payment"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "addContact"),
      "",
      "addContact",
      [ ["in", "Contact_1", ["Etapper::API::Contact", "etapestryAPI/service", "Contact"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "addDisbursement"),
      "",
      "addDisbursement",
      [ ["in", "Disbursement_1", ["Etapper::API::Disbursement", "etapestryAPI/service", "Disbursement"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "addGift"),
      "",
      "addGift",
      [ ["in", "Gift_1", ["Etapper::API::Gift", "etapestryAPI/service", "Gift"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "addLoginCredentials"),
      "",
      "addLoginCredentials",
      [ ["in", "LoginCredentialsRequest_1", ["Etapper::API::LoginCredentialsRequest", "etapestryAPI/service", "LoginCredentialsRequest"]],
        ["retval", "result", ["Etapper::API::LoginCredentialsResponse", "etapestryAPI/service", "LoginCredentialsResponse"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "addNote"),
      "",
      "addNote",
      [ ["in", "Note_1", ["Etapper::API::Note", "etapestryAPI/service", "Note"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "addOutlookIntegrationEmail"),
      "",
      "addOutlookIntegrationEmail",
      [ ["in", "OutlookIntegrationEmail_1", ["Etapper::API::OutlookIntegrationEmail", "etapestryAPI/service", "OutlookIntegrationEmail"]],
        ["in", "arrayOfAccount_2", ["Etapper::API::ArrayOfAccount", "etapestryAPI/service", "ArrayOfAccount"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "addOutlookIntegrationError"),
      "",
      "addOutlookIntegrationError",
      [ ["in", "String_1", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "addOutlookIntegrationStats"),
      "",
      "addOutlookIntegrationStats",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "Date_2", ["::SOAP::SOAPDateTime"]],
        ["in", "int_3", ["::SOAP::SOAPInt"]],
        ["in", "int_4", ["::SOAP::SOAPInt"]],
        ["in", "int_5", ["::SOAP::SOAPInt"]],
        ["in", "int_6", ["::SOAP::SOAPInt"]],
        ["in", "int_7", ["::SOAP::SOAPInt"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "addPayment"),
      "",
      "addPayment",
      [ ["in", "Payment_1", ["Etapper::API::Payment", "etapestryAPI/service", "Payment"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "addPledge"),
      "",
      "addPledge",
      [ ["in", "Pledge_1", ["Etapper::API::Pledge", "etapestryAPI/service", "Pledge"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "addRecurringGift"),
      "",
      "addRecurringGift",
      [ ["in", "RecurringGift_1", ["Etapper::API::RecurringGift", "etapestryAPI/service", "RecurringGift"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "addSoftCredit"),
      "",
      "addSoftCredit",
      [ ["in", "SoftCredit_1", ["Etapper::API::SoftCredit", "etapestryAPI/service", "SoftCredit"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "applyDefinedValues"),
      "",
      "applyDefinedValues",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "arrayOfDefinedValue_2", ["Etapper::API::ArrayOfDefinedValue", "etapestryAPI/service", "ArrayOfDefinedValue"]],
        ["in", "boolean_3", ["::SOAP::SOAPBoolean"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "connect"),
      "",
      "connect",
      [ ["in", "ConnectRequest_1", ["Etapper::API::ConnectRequest", "etapestryAPI/service", "ConnectRequest"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "externalLogin"),
      "",
      "externalLogin",
      [ ["in", "ExternalLoginRequest_1", ["Etapper::API::ExternalLoginRequest", "etapestryAPI/service", "ExternalLoginRequest"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "findAccountsForOutlookIntegration"),
      "",
      "findAccountsForOutlookIntegration",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "String_2", ["::SOAP::SOAPString"]],
        ["in", "boolean_3", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfAccount", "etapestryAPI/service", "ArrayOfAccount"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getAccount"),
      "",
      "getAccount",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getAccountById"),
      "",
      "getAccountById",
      [ ["in", "int_1", ["::SOAP::SOAPInt"]],
        ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getAccountByPersonaType"),
      "",
      "getAccountByPersonaType",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "String_2", ["::SOAP::SOAPString"]],
        ["in", "boolean_3", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getAccountByUniqueDefinedValue"),
      "",
      "getAccountByUniqueDefinedValue",
      [ ["in", "DefinedValue_1", ["Etapper::API::DefinedValue", "etapestryAPI/service", "DefinedValue"]],
        ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getAccountFromPhoneAThonList"),
      "",
      "getAccountFromPhoneAThonList",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getAccountInvolvePrivacySettings"),
      "",
      "getAccountInvolvePrivacySettings",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getAccountRef"),
      "",
      "getAccountRef",
      [ ["in", "DefinedValue_1", ["Etapper::API::DefinedValue", "etapestryAPI/service", "DefinedValue"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getApproaches"),
      "",
      "getApproaches",
      [ ["in", "boolean_1", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfstring", "etapestryAPI/service", "ArrayOfstring"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getCachedCartElements"),
      "",
      "getCachedCartElements",
      [ ["in", "int_1", ["::SOAP::SOAPInt"]],
        ["retval", "result", ["Etapper::API::PagedCartElementsResponse", "etapestryAPI/service", "PagedCartElementsResponse"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getCachedDefinedFields"),
      "",
      "getCachedDefinedFields",
      [ ["in", "int_1", ["::SOAP::SOAPInt"]],
        ["retval", "result", ["Etapper::API::PagedDefinedFieldsResponse", "etapestryAPI/service", "PagedDefinedFieldsResponse"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getCachedJournalEntries"),
      "",
      "getCachedJournalEntries",
      [ ["in", "int_1", ["::SOAP::SOAPInt"]],
        ["retval", "result", ["Etapper::API::PagedJournalEntriesResponse", "etapestryAPI/service", "PagedJournalEntriesResponse"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getCachedQueryResults"),
      "",
      "getCachedQueryResults",
      [ ["in", "int_1", ["::SOAP::SOAPInt"]],
        ["retval", "result", ["Etapper::API::PagedQueryResultsResponse", "etapestryAPI/service", "PagedQueryResultsResponse"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getCalendarItem"),
      "",
      "getCalendarItem",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::CalendarItem", "etapestryAPI/service", "CalendarItem"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getCampaigns"),
      "",
      "getCampaigns",
      [ ["in", "boolean_1", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfstring", "etapestryAPI/service", "ArrayOfstring"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getCartCategory"),
      "",
      "getCartCategory",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::CartCategory", "etapestryAPI/service", "CartCategory"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getCartElements"),
      "",
      "getCartElements",
      [ ["in", "PagedCartElementsRequest_1", ["Etapper::API::PagedCartElementsRequest", "etapestryAPI/service", "PagedCartElementsRequest"]],
        ["retval", "result", ["Etapper::API::PagedCartElementsResponse", "etapestryAPI/service", "PagedCartElementsResponse"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getCartItem"),
      "",
      "getCartItem",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::CartItem", "etapestryAPI/service", "CartItem"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getCartPreferences"),
      "",
      "getCartPreferences",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::CartPreferences", "etapestryAPI/service", "CartPreferences"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getContact"),
      "",
      "getContact",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Contact", "etapestryAPI/service", "Contact"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getContactByUniqueDefinedValue"),
      "",
      "getContactByUniqueDefinedValue",
      [ ["in", "DefinedValue_1", ["Etapper::API::DefinedValue", "etapestryAPI/service", "DefinedValue"]],
        ["retval", "result", ["Etapper::API::Contact", "etapestryAPI/service", "Contact"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getContactRef"),
      "",
      "getContactRef",
      [ ["in", "DefinedValue_1", ["Etapper::API::DefinedValue", "etapestryAPI/service", "DefinedValue"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getDeclaration"),
      "",
      "getDeclaration",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Declaration", "etapestryAPI/service", "Declaration"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getDefinedField"),
      "",
      "getDefinedField",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::DefinedField", "etapestryAPI/service", "DefinedField"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getDefinedFields"),
      "",
      "getDefinedFields",
      [ ["in", "PagedDefinedFieldsRequest_1", ["Etapper::API::PagedDefinedFieldsRequest", "etapestryAPI/service", "PagedDefinedFieldsRequest"]],
        ["retval", "result", ["Etapper::API::PagedDefinedFieldsResponse", "etapestryAPI/service", "PagedDefinedFieldsResponse"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getDisbursement"),
      "",
      "getDisbursement",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Disbursement", "etapestryAPI/service", "Disbursement"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getDonorLoginPreferences"),
      "",
      "getDonorLoginPreferences",
      [ ["retval", "result", ["Etapper::API::DonorLoginPreferences", "etapestryAPI/service", "DonorLoginPreferences"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getDuplicateAccount"),
      "",
      "getDuplicateAccount",
      [ ["in", "DuplicateAccountSearch_1", ["Etapper::API::DuplicateAccountSearch", "etapestryAPI/service", "DuplicateAccountSearch"]],
        ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getDuplicateAccounts"),
      "",
      "getDuplicateAccounts",
      [ ["in", "DuplicateAccountSearch_1", ["Etapper::API::DuplicateAccountSearch", "etapestryAPI/service", "DuplicateAccountSearch"]],
        ["retval", "result", ["Etapper::API::ArrayOfAccount", "etapestryAPI/service", "ArrayOfAccount"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getDynamicQueryResultStats"),
      "",
      "getDynamicQueryResultStats",
      [ ["in", "DynamicQuery_1", ["Etapper::API::DynamicQuery", "etapestryAPI/service", "DynamicQuery"]],
        ["retval", "result", ["Etapper::API::QueryResultStats", "etapestryAPI/service", "QueryResultStats"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getDynamicQueryResults"),
      "",
      "getDynamicQueryResults",
      [ ["in", "PagedDynamicQueryResultsRequest_1", ["Etapper::API::PagedDynamicQueryResultsRequest", "etapestryAPI/service", "PagedDynamicQueryResultsRequest"]],
        ["retval", "result", ["Etapper::API::PagedQueryResultsResponse", "etapestryAPI/service", "PagedQueryResultsResponse"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getEntityRole"),
      "",
      "getEntityRole",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::EntityRole", "etapestryAPI/service", "EntityRole"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getExistingQueryResultStats"),
      "",
      "getExistingQueryResultStats",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::QueryResultStats", "etapestryAPI/service", "QueryResultStats"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getExistingQueryResults"),
      "",
      "getExistingQueryResults",
      [ ["in", "PagedExistingQueryResultsRequest_1", ["Etapper::API::PagedExistingQueryResultsRequest", "etapestryAPI/service", "PagedExistingQueryResultsRequest"]],
        ["retval", "result", ["Etapper::API::PagedQueryResultsResponse", "etapestryAPI/service", "PagedQueryResultsResponse"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getFunds"),
      "",
      "getFunds",
      [ ["in", "boolean_1", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfstring", "etapestryAPI/service", "ArrayOfstring"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getGift"),
      "",
      "getGift",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Gift", "etapestryAPI/service", "Gift"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getInvitation"),
      "",
      "getInvitation",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Invitation", "etapestryAPI/service", "Invitation"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getJournalEntries"),
      "",
      "getJournalEntries",
      [ ["in", "PagedJournalEntriesRequest_1", ["Etapper::API::PagedJournalEntriesRequest", "etapestryAPI/service", "PagedJournalEntriesRequest"]],
        ["retval", "result", ["Etapper::API::PagedJournalEntriesResponse", "etapestryAPI/service", "PagedJournalEntriesResponse"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getLetters"),
      "",
      "getLetters",
      [ ["in", "boolean_1", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfstring", "etapestryAPI/service", "ArrayOfstring"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getMyAccount"),
      "",
      "getMyAccount",
      [ ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getMyAccountByPersonaType"),
      "",
      "getMyAccountByPersonaType",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getMyEntityRole"),
      "",
      "getMyEntityRole",
      [ ["retval", "result", ["Etapper::API::EntityRole", "etapestryAPI/service", "EntityRole"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getMyJournalEntries"),
      "",
      "getMyJournalEntries",
      [ ["retval", "result", ["Etapper::API::Collection", "http://java.sun.com/jax-rpc-ri/internal", "collection"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getMyJournalSummary"),
      "",
      "getMyJournalSummary",
      [ ["retval", "result", ["Etapper::API::JournalSummary", "etapestryAPI/service", "JournalSummary"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getMyPrivacyPreferences"),
      "",
      "getMyPrivacyPreferences",
      [ ["retval", "result", ["Etapper::API::PrivacyPreferences", "etapestryAPI/service", "PrivacyPreferences"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getNextCartElements"),
      "",
      "getNextCartElements",
      [ ["retval", "result", ["Etapper::API::PagedCartElementsResponse", "etapestryAPI/service", "PagedCartElementsResponse"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getNextDefinedFields"),
      "",
      "getNextDefinedFields",
      [ ["retval", "result", ["Etapper::API::PagedDefinedFieldsResponse", "etapestryAPI/service", "PagedDefinedFieldsResponse"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getNextJournalEntries"),
      "",
      "getNextJournalEntries",
      [ ["retval", "result", ["Etapper::API::PagedJournalEntriesResponse", "etapestryAPI/service", "PagedJournalEntriesResponse"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getNextQueryResults"),
      "",
      "getNextQueryResults",
      [ ["retval", "result", ["Etapper::API::PagedQueryResultsResponse", "etapestryAPI/service", "PagedQueryResultsResponse"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getNote"),
      "",
      "getNote",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Note", "etapestryAPI/service", "Note"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getNoteByUniqueDefinedValue"),
      "",
      "getNoteByUniqueDefinedValue",
      [ ["in", "DefinedValue_1", ["Etapper::API::DefinedValue", "etapestryAPI/service", "DefinedValue"]],
        ["retval", "result", ["Etapper::API::Note", "etapestryAPI/service", "Note"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getNoteRef"),
      "",
      "getNoteRef",
      [ ["in", "DefinedValue_1", ["Etapper::API::DefinedValue", "etapestryAPI/service", "DefinedValue"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getOrderItem"),
      "",
      "getOrderItem",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::OrderItem", "etapestryAPI/service", "OrderItem"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getOrderShipping"),
      "",
      "getOrderShipping",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::OrderShipping", "etapestryAPI/service", "OrderShipping"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getOrderTax"),
      "",
      "getOrderTax",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::OrderTax", "etapestryAPI/service", "OrderTax"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getOrganizationPreferences"),
      "",
      "getOrganizationPreferences",
      [ ["retval", "result", ["Etapper::API::OrganizationPreferences", "etapestryAPI/service", "OrganizationPreferences"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getOutlookIntegrationContactMethods"),
      "",
      "getOutlookIntegrationContactMethods",
      [ ["retval", "result", ["Etapper::API::ArrayOfDefinedValue", "etapestryAPI/service", "ArrayOfDefinedValue"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getOutlookIntegrationVersion"),
      "",
      "getOutlookIntegrationVersion",
      [ ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getPayment"),
      "",
      "getPayment",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Payment", "etapestryAPI/service", "Payment"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getPhoneAThonLists"),
      "",
      "getPhoneAThonLists",
      [ ["in", "boolean_1", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfPhoneAThonList", "etapestryAPI/service", "ArrayOfPhoneAThonList"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getPledge"),
      "",
      "getPledge",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Pledge", "etapestryAPI/service", "Pledge"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getPrivacyPreferences"),
      "",
      "getPrivacyPreferences",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::PrivacyPreferences", "etapestryAPI/service", "PrivacyPreferences"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getQueryResultStats"),
      "",
      "getQueryResultStats",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "String_2", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::QueryResultStats", "etapestryAPI/service", "QueryResultStats"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getRecurringGift"),
      "",
      "getRecurringGift",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::RecurringGift", "etapestryAPI/service", "RecurringGift"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getRecurringGiftSchedule"),
      "",
      "getRecurringGiftSchedule",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::RecurringGiftSchedule", "etapestryAPI/service", "RecurringGiftSchedule"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getSegmentedDonation"),
      "",
      "getSegmentedDonation",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::SegmentedDonation", "etapestryAPI/service", "SegmentedDonation"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getSegmentedOrder"),
      "",
      "getSegmentedOrder",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::SegmentedOrder", "etapestryAPI/service", "SegmentedOrder"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getSegmentedPledge"),
      "",
      "getSegmentedPledge",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::SegmentedPledge", "etapestryAPI/service", "SegmentedPledge"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getSoftCredit"),
      "",
      "getSoftCredit",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::SoftCredit", "etapestryAPI/service", "SoftCredit"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getSystemDefinedValues"),
      "",
      "getSystemDefinedValues",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfDefinedValue", "etapestryAPI/service", "ArrayOfDefinedValue"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getTransaction"),
      "",
      "getTransaction",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", [nil]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getTransactionByUniqueDefinedValue"),
      "",
      "getTransactionByUniqueDefinedValue",
      [ ["in", "DefinedValue_1", ["Etapper::API::DefinedValue", "etapestryAPI/service", "DefinedValue"]],
        ["retval", "result", [nil]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getTransactionProcessors"),
      "",
      "getTransactionProcessors",
      [ ["in", "boolean_1", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfTransactionProcessor", "etapestryAPI/service", "ArrayOfTransactionProcessor"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getTransactionRef"),
      "",
      "getTransactionRef",
      [ ["in", "DefinedValue_1", ["Etapper::API::DefinedValue", "etapestryAPI/service", "DefinedValue"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "getUserDefinedSetValues"),
      "",
      "getUserDefinedSetValues",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfDefinedValue", "etapestryAPI/service", "ArrayOfDefinedValue"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "hasMoreCartElements"),
      "",
      "hasMoreCartElements",
      [ ["retval", "result", ["::SOAP::SOAPBoolean"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "hasMoreDefinedFields"),
      "",
      "hasMoreDefinedFields",
      [ ["retval", "result", ["::SOAP::SOAPBoolean"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "hasMoreJournalEntries"),
      "",
      "hasMoreJournalEntries",
      [ ["retval", "result", ["::SOAP::SOAPBoolean"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "hasMoreQueryResults"),
      "",
      "hasMoreQueryResults",
      [ ["retval", "result", ["::SOAP::SOAPBoolean"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "initLinkedTransaction"),
      "",
      "initLinkedTransaction",
      [ ["retval", "result", ["Etapper::API::LinkedTransaction", "etapestryAPI/service", "LinkedTransaction"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "isMyPasswordExpired"),
      "",
      "isMyPasswordExpired",
      [ ["retval", "result", ["::SOAP::SOAPBoolean"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "login"),
      "",
      "login",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "String_2", ["::SOAP::SOAPString"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "logout"),
      "",
      "logout",
      [],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "pingOkay"),
      "",
      "pingOkay",
      [ ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "pingTime"),
      "",
      "pingTime",
      [ ["retval", "result", ["::SOAP::SOAPDateTime"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "processAccountChange"),
      "",
      "processAccountChange",
      [ ["in", "AccountChangeRequest_1", ["Etapper::API::AccountChangeRequest", "etapestryAPI/service", "AccountChangeRequest"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "processCartOrder"),
      "",
      "processCartOrder",
      [ ["in", "CartOrderRequest_1", ["Etapper::API::CartOrderRequest", "etapestryAPI/service", "CartOrderRequest"]],
        ["retval", "result", ["Etapper::API::CartOrderResponse", "etapestryAPI/service", "CartOrderResponse"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "processEcommerceRequest"),
      "",
      "processEcommerceRequest",
      [ ["in", "EcommerceRequest_1", ["Etapper::API::EcommerceRequest", "etapestryAPI/service", "EcommerceRequest"]],
        ["retval", "result", ["Etapper::API::EcommerceResponse", "etapestryAPI/service", "EcommerceResponse"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "processForgottenPasswordEmailHelp"),
      "",
      "processForgottenPasswordEmailHelp",
      [ ["in", "ForgottenPasswordEmailHelpRequest_1", ["Etapper::API::ForgottenPasswordEmailHelpRequest", "etapestryAPI/service", "ForgottenPasswordEmailHelpRequest"]],
        ["retval", "result", ["::SOAP::SOAPInt"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "processForgottenPasswordResetHelp"),
      "",
      "processForgottenPasswordResetHelp",
      [ ["in", "ForgottenPasswordResetHelpRequest_1", ["Etapper::API::ForgottenPasswordResetHelpRequest", "etapestryAPI/service", "ForgottenPasswordResetHelpRequest"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "processTransaction"),
      "",
      "processTransaction",
      [ ["in", "ProcessTransactionRequest_1", ["Etapper::API::ProcessTransactionRequest", "etapestryAPI/service", "ProcessTransactionRequest"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "reverseTransaction"),
      "",
      "reverseTransaction",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "String_2", ["::SOAP::SOAPString"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "sendEmail"),
      "",
      "sendEmail",
      [ ["in", "SendEmailRequest_1", ["Etapper::API::SendEmailRequest", "etapestryAPI/service", "SendEmailRequest"]],
        ["retval", "result", ["::SOAP::SOAPInt"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "updateAccount"),
      "",
      "updateAccount",
      [ ["in", "Account_1", ["Etapper::API::Account", "etapestryAPI/service", "Account"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "updateContact"),
      "",
      "updateContact",
      [ ["in", "Contact_1", ["Etapper::API::Contact", "etapestryAPI/service", "Contact"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "updateForgottenPassword"),
      "",
      "updateForgottenPassword",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "String_2", ["::SOAP::SOAPString"]],
        ["in", "String_3", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "updateGift"),
      "",
      "updateGift",
      [ ["in", "Gift_1", ["Etapper::API::Gift", "etapestryAPI/service", "Gift"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "updateMyExpiredPassword"),
      "",
      "updateMyExpiredPassword",
      [ ["in", "String_1", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "updateMyLoginCredentials"),
      "",
      "updateMyLoginCredentials",
      [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "String_2", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "updateMyPassword"),
      "",
      "updateMyPassword",
      [ ["in", "String_1", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "updateNote"),
      "",
      "updateNote",
      [ ["in", "Note_1", ["Etapper::API::Note", "etapestryAPI/service", "Note"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "updatePrivacyPreferences"),
      "",
      "updatePrivacyPreferences",
      [ ["in", "PrivacyPreferences_1", ["Etapper::API::PrivacyPreferences", "etapestryAPI/service", "PrivacyPreferences"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "updateRecurringGift"),
      "",
      "updateRecurringGift",
      [ ["in", "RecurringGift_1", ["Etapper::API::RecurringGift", "etapestryAPI/service", "RecurringGift"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "validateCartLicense"),
      "",
      "validateCartLicense",
      [ ["retval", "result", ["::SOAP::SOAPBoolean"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "validateDonorLoginLicense"),
      "",
      "validateDonorLoginLicense",
      [ ["retval", "result", ["::SOAP::SOAPBoolean"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ],
    [ XSD::QName.new(NsService, "validateOutlookIntegrationLicense"),
      "",
      "validateOutlookIntegrationLicense",
      [ ["retval", "result", ["::SOAP::SOAPBoolean"]] ],
      { :request_style =>  :rpc, :request_use =>  :encoded,
        :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
    ]
  ]

  def initialize(endpoint_url = nil)
    endpoint_url ||= DefaultEndpointUrl
    super(endpoint_url, nil)
    self.mapping_registry = ServiceMappingRegistry::EncodedRegistry
    self.literal_mapping_registry = ServiceMappingRegistry::LiteralRegistry
    init_methods
  end

private

  def init_methods
    Methods.each do |definitions|
      opt = definitions.last
      if opt[:request_style] == :document
        add_document_operation(*definitions)
      else
        add_rpc_operation(*definitions)
        qname = definitions[0]
        name = definitions[2]
        if qname.name != name and qname.name.capitalize == name.capitalize
          ::SOAP::Mapping.define_singleton_method(self, qname.name) do |*arg|
            __send__(name, *arg)
          end
        end
      end
    end
  end
end


end
