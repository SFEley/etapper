# Big long WSDL-generated method definitions moved here for clarity

module Etapper
  module API

    Methods = [
      [ XSD::QName.new(ETAP_NS, "addAccount"),
        "",
        "addAccount",
        [ ["in", "Account_1", ["Etapper::API::Account", "etapestryAPI/service", "Account"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "addAndProcessGift"),
        "",
        "addAndProcessGift",
        [ ["in", "Gift_1", ["Etapper::API::Gift", "etapestryAPI/service", "Gift"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "addAndProcessPayment"),
        "",
        "addAndProcessPayment",
        [ ["in", "Payment_1", ["Etapper::API::Payment", "etapestryAPI/service", "Payment"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "addContact"),
        "",
        "addContact",
        [ ["in", "Contact_1", ["Etapper::API::Contact", "etapestryAPI/service", "Contact"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "addDisbursement"),
        "",
        "addDisbursement",
        [ ["in", "Disbursement_1", ["Etapper::API::Disbursement", "etapestryAPI/service", "Disbursement"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "addGift"),
        "",
        "addGift",
        [ ["in", "Gift_1", ["Etapper::API::Gift", "etapestryAPI/service", "Gift"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "addLoginCredentials"),
        "",
        "addLoginCredentials",
        [ ["in", "LoginCredentialsRequest_1", ["Etapper::API::LoginCredentialsRequest", "etapestryAPI/service", "LoginCredentialsRequest"]],
        ["retval", "result", ["Etapper::API::LoginCredentialsResponse", "etapestryAPI/service", "LoginCredentialsResponse"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "addNote"),
        "",
        "addNote",
        [ ["in", "Note_1", ["Etapper::API::Note", "etapestryAPI/service", "Note"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "addOutlookIntegrationEmail"),
        "",
        "addOutlookIntegrationEmail",
        [ ["in", "OutlookIntegrationEmail_1", ["Etapper::API::OutlookIntegrationEmail", "etapestryAPI/service", "OutlookIntegrationEmail"]],
        ["in", "arrayOfAccount_2", ["Etapper::API::ArrayOfAccount", "etapestryAPI/service", "ArrayOfAccount"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "addOutlookIntegrationError"),
        "",
        "addOutlookIntegrationError",
        [ ["in", "String_1", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "addOutlookIntegrationStats"),
        "",
        "addOutlookIntegrationStats",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "Date_2", ["::SOAP::SOAPDateTime"]],
        ["in", "int_3", ["::SOAP::SOAPInt"]],
        ["in", "int_4", ["::SOAP::SOAPInt"]],
        ["in", "int_5", ["::SOAP::SOAPInt"]],
        ["in", "int_6", ["::SOAP::SOAPInt"]],
        ["in", "int_7", ["::SOAP::SOAPInt"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "addPayment"),
        "",
        "addPayment",
        [ ["in", "Payment_1", ["Etapper::API::Payment", "etapestryAPI/service", "Payment"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "addPledge"),
        "",
        "addPledge",
        [ ["in", "Pledge_1", ["Etapper::API::Pledge", "etapestryAPI/service", "Pledge"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "addRecurringGift"),
        "",
        "addRecurringGift",
        [ ["in", "RecurringGift_1", ["Etapper::API::RecurringGift", "etapestryAPI/service", "RecurringGift"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "addSoftCredit"),
        "",
        "addSoftCredit",
        [ ["in", "SoftCredit_1", ["Etapper::API::SoftCredit", "etapestryAPI/service", "SoftCredit"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "connect"),
        "",
        "connect",
        [ ["in", "ConnectRequest_1", ["Etapper::API::ConnectRequest", "etapestryAPI/service", "ConnectRequest"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "externalLogin"),
        "",
        "externalLogin",
        [ ["in", "ExternalLoginRequest_1", ["Etapper::API::ExternalLoginRequest", "etapestryAPI/service", "ExternalLoginRequest"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "findAccountsForOutlookIntegration"),
        "",
        "findAccountsForOutlookIntegration",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "String_2", ["::SOAP::SOAPString"]],
        ["in", "boolean_3", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfAccount", "etapestryAPI/service", "ArrayOfAccount"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getAccount"),
        "",
        "getAccount",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getAccountById"),
        "",
        "getAccountById",
        [ ["in", "int_1", ["::SOAP::SOAPInt"]],
        ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getAccountByPersonaType"),
        "",
        "getAccountByPersonaType",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "String_2", ["::SOAP::SOAPString"]],
        ["in", "boolean_3", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getAccountByUniqueDefinedValue"),
        "",
        "getAccountByUniqueDefinedValue",
        [ ["in", "DefinedValue_1", ["Etapper::API::DefinedValue", "etapestryAPI/service", "DefinedValue"]],
        ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getAccountFromPhoneAThonList"),
        "",
        "getAccountFromPhoneAThonList",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getAccountInvolvePrivacySettings"),
        "",
        "getAccountInvolvePrivacySettings",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getAccountRef"),
        "",
        "getAccountRef",
        [ ["in", "DefinedValue_1", ["Etapper::API::DefinedValue", "etapestryAPI/service", "DefinedValue"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getApproaches"),
        "",
        "getApproaches",
        [ ["in", "boolean_1", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfstring", "etapestryAPI/service", "ArrayOfstring"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getCachedCartElements"),
        "",
        "getCachedCartElements",
        [ ["in", "int_1", ["::SOAP::SOAPInt"]],
        ["retval", "result", ["Etapper::API::PagedCartElementsResponse", "etapestryAPI/service", "PagedCartElementsResponse"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getCachedDefinedFields"),
        "",
        "getCachedDefinedFields",
        [ ["in", "int_1", ["::SOAP::SOAPInt"]],
        ["retval", "result", ["Etapper::API::PagedDefinedFieldsResponse", "etapestryAPI/service", "PagedDefinedFieldsResponse"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getCachedJournalEntries"),
        "",
        "getCachedJournalEntries",
        [ ["in", "int_1", ["::SOAP::SOAPInt"]],
        ["retval", "result", ["Etapper::API::PagedJournalEntriesResponse", "etapestryAPI/service", "PagedJournalEntriesResponse"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getCachedQueryResults"),
        "",
        "getCachedQueryResults",
        [ ["in", "int_1", ["::SOAP::SOAPInt"]],
        ["retval", "result", ["Etapper::API::PagedQueryResultsResponse", "etapestryAPI/service", "PagedQueryResultsResponse"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getCalendarItem"),
        "",
        "getCalendarItem",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::CalendarItem", "etapestryAPI/service", "CalendarItem"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getCampaigns"),
        "",
        "getCampaigns",
        [ ["in", "boolean_1", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfstring", "etapestryAPI/service", "ArrayOfstring"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getCartCategory"),
        "",
        "getCartCategory",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::CartCategory", "etapestryAPI/service", "CartCategory"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getCartElements"),
        "",
        "getCartElements",
        [ ["in", "PagedCartElementsRequest_1", ["Etapper::API::PagedCartElementsRequest", "etapestryAPI/service", "PagedCartElementsRequest"]],
        ["retval", "result", ["Etapper::API::PagedCartElementsResponse", "etapestryAPI/service", "PagedCartElementsResponse"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getCartItem"),
        "",
        "getCartItem",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::CartItem", "etapestryAPI/service", "CartItem"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getCartPreferences"),
        "",
        "getCartPreferences",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::CartPreferences", "etapestryAPI/service", "CartPreferences"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getContact"),
        "",
        "getContact",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Contact", "etapestryAPI/service", "Contact"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getContactByUniqueDefinedValue"),
        "",
        "getContactByUniqueDefinedValue",
        [ ["in", "DefinedValue_1", ["Etapper::API::DefinedValue", "etapestryAPI/service", "DefinedValue"]],
        ["retval", "result", ["Etapper::API::Contact", "etapestryAPI/service", "Contact"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getContactRef"),
        "",
        "getContactRef",
        [ ["in", "DefinedValue_1", ["Etapper::API::DefinedValue", "etapestryAPI/service", "DefinedValue"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getDeclaration"),
        "",
        "getDeclaration",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Declaration", "etapestryAPI/service", "Declaration"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getDefinedField"),
        "",
        "getDefinedField",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::DefinedField", "etapestryAPI/service", "DefinedField"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getDefinedFields"),
        "",
        "getDefinedFields",
        [ ["in", "PagedDefinedFieldsRequest_1", ["Etapper::API::PagedDefinedFieldsRequest", "etapestryAPI/service", "PagedDefinedFieldsRequest"]],
        ["retval", "result", ["Etapper::API::PagedDefinedFieldsResponse", "etapestryAPI/service", "PagedDefinedFieldsResponse"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getDisbursement"),
        "",
        "getDisbursement",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Disbursement", "etapestryAPI/service", "Disbursement"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getDonorLoginPreferences"),
        "",
        "getDonorLoginPreferences",
        [ ["retval", "result", ["Etapper::API::DonorLoginPreferences", "etapestryAPI/service", "DonorLoginPreferences"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getDuplicateAccount"),
        "",
        "getDuplicateAccount",
        [ ["in", "DuplicateAccountSearch_1", ["Etapper::API::DuplicateAccountSearch", "etapestryAPI/service", "DuplicateAccountSearch"]],
        ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getDuplicateAccounts"),
        "",
        "getDuplicateAccounts",
        [ ["in", "DuplicateAccountSearch_1", ["Etapper::API::DuplicateAccountSearch", "etapestryAPI/service", "DuplicateAccountSearch"]],
        ["retval", "result", ["Etapper::API::ArrayOfAccount", "etapestryAPI/service", "ArrayOfAccount"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getDynamicQueryResults"),
        "",
        "getDynamicQueryResults",
        [ ["in", "PagedDynamicQueryResultsRequest_1", ["Etapper::API::PagedDynamicQueryResultsRequest", "etapestryAPI/service", "PagedDynamicQueryResultsRequest"]],
        ["retval", "result", ["Etapper::API::PagedQueryResultsResponse", "etapestryAPI/service", "PagedQueryResultsResponse"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getEntityRole"),
        "",
        "getEntityRole",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::EntityRole", "etapestryAPI/service", "EntityRole"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getExistingQueryResults"),
        "",
        "getExistingQueryResults",
        [ ["in", "PagedExistingQueryResultsRequest_1", ["Etapper::API::PagedExistingQueryResultsRequest", "etapestryAPI/service", "PagedExistingQueryResultsRequest"]],
        ["retval", "result", ["Etapper::API::PagedQueryResultsResponse", "etapestryAPI/service", "PagedQueryResultsResponse"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getFunds"),
        "",
        "getFunds",
        [ ["in", "boolean_1", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfstring", "etapestryAPI/service", "ArrayOfstring"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getGift"),
        "",
        "getGift",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Gift", "etapestryAPI/service", "Gift"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getInvitation"),
        "",
        "getInvitation",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Invitation", "etapestryAPI/service", "Invitation"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getJournalEntries"),
        "",
        "getJournalEntries",
        [ ["in", "PagedJournalEntriesRequest_1", ["Etapper::API::PagedJournalEntriesRequest", "etapestryAPI/service", "PagedJournalEntriesRequest"]],
        ["retval", "result", ["Etapper::API::PagedJournalEntriesResponse", "etapestryAPI/service", "PagedJournalEntriesResponse"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getLetters"),
        "",
        "getLetters",
        [ ["in", "boolean_1", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfstring", "etapestryAPI/service", "ArrayOfstring"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getMyAccount"),
        "",
        "getMyAccount",
        [ ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getMyAccountByPersonaType"),
        "",
        "getMyAccountByPersonaType",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::Account", "etapestryAPI/service", "Account"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getMyEntityRole"),
        "",
        "getMyEntityRole",
        [ ["retval", "result", ["Etapper::API::EntityRole", "etapestryAPI/service", "EntityRole"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getMyJournalEntries"),
        "",
        "getMyJournalEntries",
        [ ["retval", "result", ["Etapper::API::Collection", "http://java.sun.com/jax-rpc-ri/internal", "collection"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getMyJournalSummary"),
        "",
        "getMyJournalSummary",
        [ ["retval", "result", ["Etapper::API::JournalSummary", "etapestryAPI/service", "JournalSummary"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getMyPrivacyPreferences"),
        "",
        "getMyPrivacyPreferences",
        [ ["retval", "result", ["Etapper::API::PrivacyPreferences", "etapestryAPI/service", "PrivacyPreferences"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getNextCartElements"),
        "",
        "getNextCartElements",
        [ ["retval", "result", ["Etapper::API::PagedCartElementsResponse", "etapestryAPI/service", "PagedCartElementsResponse"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getNextDefinedFields"),
        "",
        "getNextDefinedFields",
        [ ["retval", "result", ["Etapper::API::PagedDefinedFieldsResponse", "etapestryAPI/service", "PagedDefinedFieldsResponse"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getNextJournalEntries"),
        "",
        "getNextJournalEntries",
        [ ["retval", "result", ["Etapper::API::PagedJournalEntriesResponse", "etapestryAPI/service", "PagedJournalEntriesResponse"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getNextQueryResults"),
        "",
        "getNextQueryResults",
        [ ["retval", "result", ["Etapper::API::PagedQueryResultsResponse", "etapestryAPI/service", "PagedQueryResultsResponse"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getNote"),
        "",
        "getNote",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Note", "etapestryAPI/service", "Note"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getNoteByUniqueDefinedValue"),
        "",
        "getNoteByUniqueDefinedValue",
        [ ["in", "DefinedValue_1", ["Etapper::API::DefinedValue", "etapestryAPI/service", "DefinedValue"]],
        ["retval", "result", ["Etapper::API::Note", "etapestryAPI/service", "Note"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getNoteRef"),
        "",
        "getNoteRef",
        [ ["in", "DefinedValue_1", ["Etapper::API::DefinedValue", "etapestryAPI/service", "DefinedValue"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getOrderItem"),
        "",
        "getOrderItem",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::OrderItem", "etapestryAPI/service", "OrderItem"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getOrderShipping"),
        "",
        "getOrderShipping",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::OrderShipping", "etapestryAPI/service", "OrderShipping"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getOrderTax"),
        "",
        "getOrderTax",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::OrderTax", "etapestryAPI/service", "OrderTax"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getOrganizationPreferences"),
        "",
        "getOrganizationPreferences",
        [ ["retval", "result", ["Etapper::API::OrganizationPreferences", "etapestryAPI/service", "OrganizationPreferences"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getOutlookIntegrationContactMethods"),
        "",
        "getOutlookIntegrationContactMethods",
        [ ["retval", "result", ["Etapper::API::ArrayOfDefinedValue", "etapestryAPI/service", "ArrayOfDefinedValue"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getOutlookIntegrationVersion"),
        "",
        "getOutlookIntegrationVersion",
        [ ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getPayment"),
        "",
        "getPayment",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Payment", "etapestryAPI/service", "Payment"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getPhoneAThonLists"),
        "",
        "getPhoneAThonLists",
        [ ["in", "boolean_1", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfPhoneAThonList", "etapestryAPI/service", "ArrayOfPhoneAThonList"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getPledge"),
        "",
        "getPledge",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::Pledge", "etapestryAPI/service", "Pledge"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getPrivacyPreferences"),
        "",
        "getPrivacyPreferences",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::PrivacyPreferences", "etapestryAPI/service", "PrivacyPreferences"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getQueryResultStats"),
        "",
        "getQueryResultStats",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "String_2", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::QueryResultStats", "etapestryAPI/service", "QueryResultStats"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getRecurringGift"),
        "",
        "getRecurringGift",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::RecurringGift", "etapestryAPI/service", "RecurringGift"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getRecurringGiftSchedule"),
        "",
        "getRecurringGiftSchedule",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::RecurringGiftSchedule", "etapestryAPI/service", "RecurringGiftSchedule"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getSegmentedDonation"),
        "",
        "getSegmentedDonation",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::SegmentedDonation", "etapestryAPI/service", "SegmentedDonation"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getSegmentedOrder"),
        "",
        "getSegmentedOrder",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::SegmentedOrder", "etapestryAPI/service", "SegmentedOrder"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getSegmentedPledge"),
        "",
        "getSegmentedPledge",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::SegmentedPledge", "etapestryAPI/service", "SegmentedPledge"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getSoftCredit"),
        "",
        "getSoftCredit",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", ["Etapper::API::SoftCredit", "etapestryAPI/service", "SoftCredit"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getSystemDefinedValues"),
        "",
        "getSystemDefinedValues",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfDefinedValue", "etapestryAPI/service", "ArrayOfDefinedValue"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getTransaction"),
        "",
        "getTransaction",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["retval", "result", [nil]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getTransactionByUniqueDefinedValue"),
        "",
        "getTransactionByUniqueDefinedValue",
        [ ["in", "DefinedValue_1", ["Etapper::API::DefinedValue", "etapestryAPI/service", "DefinedValue"]],
        ["retval", "result", [nil]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getTransactionProcessors"),
        "",
        "getTransactionProcessors",
        [ ["in", "boolean_1", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfTransactionProcessor", "etapestryAPI/service", "ArrayOfTransactionProcessor"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getTransactionRef"),
        "",
        "getTransactionRef",
        [ ["in", "DefinedValue_1", ["Etapper::API::DefinedValue", "etapestryAPI/service", "DefinedValue"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "getUserDefinedSetValues"),
        "",
        "getUserDefinedSetValues",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["Etapper::API::ArrayOfDefinedValue", "etapestryAPI/service", "ArrayOfDefinedValue"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "hasMoreCartElements"),
        "",
        "hasMoreCartElements",
        [ ["retval", "result", ["::SOAP::SOAPBoolean"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "hasMoreDefinedFields"),
        "",
        "hasMoreDefinedFields",
        [ ["retval", "result", ["::SOAP::SOAPBoolean"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "hasMoreJournalEntries"),
        "",
        "hasMoreJournalEntries",
        [ ["retval", "result", ["::SOAP::SOAPBoolean"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "hasMoreQueryResults"),
        "",
        "hasMoreQueryResults",
        [ ["retval", "result", ["::SOAP::SOAPBoolean"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "initLinkedTransaction"),
        "",
        "initLinkedTransaction",
        [ ["retval", "result", ["Etapper::API::LinkedTransaction", "etapestryAPI/service", "LinkedTransaction"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "isMyPasswordExpired"),
        "",
        "isMyPasswordExpired",
        [ ["retval", "result", ["::SOAP::SOAPBoolean"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "login"),
        "",
        "login",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "String_2", ["::SOAP::SOAPString"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "logout"),
        "",
        "logout",
        [],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "pingOkay"),
        "",
        "pingOkay",
        [ ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "pingTime"),
        "",
        "pingTime",
        [ ["retval", "result", ["::SOAP::SOAPDateTime"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "processAccountChange"),
        "",
        "processAccountChange",
        [ ["in", "AccountChangeRequest_1", ["Etapper::API::AccountChangeRequest", "etapestryAPI/service", "AccountChangeRequest"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "processCartOrder"),
        "",
        "processCartOrder",
        [ ["in", "CartOrderRequest_1", ["Etapper::API::CartOrderRequest", "etapestryAPI/service", "CartOrderRequest"]],
        ["retval", "result", ["Etapper::API::CartOrderResponse", "etapestryAPI/service", "CartOrderResponse"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "processEcommerceRequest"),
        "",
        "processEcommerceRequest",
        [ ["in", "EcommerceRequest_1", ["Etapper::API::EcommerceRequest", "etapestryAPI/service", "EcommerceRequest"]],
        ["retval", "result", ["Etapper::API::EcommerceResponse", "etapestryAPI/service", "EcommerceResponse"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "processForgottenPasswordEmailHelp"),
        "",
        "processForgottenPasswordEmailHelp",
        [ ["in", "ForgottenPasswordEmailHelpRequest_1", ["Etapper::API::ForgottenPasswordEmailHelpRequest", "etapestryAPI/service", "ForgottenPasswordEmailHelpRequest"]],
        ["retval", "result", ["::SOAP::SOAPInt"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "processForgottenPasswordResetHelp"),
        "",
        "processForgottenPasswordResetHelp",
        [ ["in", "ForgottenPasswordResetHelpRequest_1", ["Etapper::API::ForgottenPasswordResetHelpRequest", "etapestryAPI/service", "ForgottenPasswordResetHelpRequest"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "processTransaction"),
        "",
        "processTransaction",
        [ ["in", "ProcessTransactionRequest_1", ["Etapper::API::ProcessTransactionRequest", "etapestryAPI/service", "ProcessTransactionRequest"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "reverseTransaction"),
        "",
        "reverseTransaction",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "String_2", ["::SOAP::SOAPString"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "sendEmail"),
        "",
        "sendEmail",
        [ ["in", "SendEmailRequest_1", ["Etapper::API::SendEmailRequest", "etapestryAPI/service", "SendEmailRequest"]],
        ["retval", "result", ["::SOAP::SOAPInt"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "updateAccount"),
        "",
        "updateAccount",
        [ ["in", "Account_1", ["Etapper::API::Account", "etapestryAPI/service", "Account"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "updateContact"),
        "",
        "updateContact",
        [ ["in", "Contact_1", ["Etapper::API::Contact", "etapestryAPI/service", "Contact"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "updateForgottenPassword"),
        "",
        "updateForgottenPassword",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "String_2", ["::SOAP::SOAPString"]],
        ["in", "String_3", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "updateGift"),
        "",
        "updateGift",
        [ ["in", "Gift_1", ["Etapper::API::Gift", "etapestryAPI/service", "Gift"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "updateMyExpiredPassword"),
        "",
        "updateMyExpiredPassword",
        [ ["in", "String_1", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "updateMyLoginCredentials"),
        "",
        "updateMyLoginCredentials",
        [ ["in", "String_1", ["::SOAP::SOAPString"]],
        ["in", "String_2", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "updateMyPassword"),
        "",
        "updateMyPassword",
        [ ["in", "String_1", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "updateNote"),
        "",
        "updateNote",
        [ ["in", "Note_1", ["Etapper::API::Note", "etapestryAPI/service", "Note"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]],
        ["retval", "result", ["::SOAP::SOAPString"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "updatePrivacyPreferences"),
        "",
        "updatePrivacyPreferences",
        [ ["in", "PrivacyPreferences_1", ["Etapper::API::PrivacyPreferences", "etapestryAPI/service", "PrivacyPreferences"]],
        ["in", "boolean_2", ["::SOAP::SOAPBoolean"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "validateCartLicense"),
        "",
        "validateCartLicense",
        [ ["retval", "result", ["::SOAP::SOAPBoolean"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "validateDonorLoginLicense"),
        "",
        "validateDonorLoginLicense",
        [ ["retval", "result", ["::SOAP::SOAPBoolean"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ],
      [ XSD::QName.new(ETAP_NS, "validateOutlookIntegrationLicense"),
        "",
        "validateOutlookIntegrationLicense",
        [ ["retval", "result", ["::SOAP::SOAPBoolean"]] ],
        { :request_style =>  :rpc, :request_use =>  :encoded,
          :response_style => :rpc, :response_use => :encoded,
        :faults => {} }
      ]
    ]

  end
end
